{"version":3,"sources":["../../test/user_login_handler.test.js"],"names":["describe","skip","before","it","clientReq","userid","password","db","getUserInfo","res","PASSWORD","userInfo","timestamp","tokenvalue","token","generateToken","response","code","result","console","log","done","after"],"mappings":"aAAA,4C;;AAEAA,SAASC,IAAT,CAAc,sBAAd,EAAsC,YAAY;;AAE9CC,WAAO,MAAP,EAAe,YAAM;;AAEpB,KAFD;;AAIAC,OAAG,YAAH,EAAiB,gBAAQ;AACrB,YAAIC,YAAY,EAAhB;AACAA,kBAAUC,MAAV,GAAmB,aAAnB;AACAD,kBAAUE,QAAV,GAAqB,MAArB;;AAEA;AACA,2BAASC,EAAT,GAAcC,WAAd,CAA0BJ,UAAUC,MAApC,EAA4C,UAAUI,GAAV,EAAe;AACvD;AACA,gBAAI,CAAC,CAACA,GAAN,EAAW;AACP;AACA,oBAAIL,UAAUE,QAAV,KAAuBG,IAAI,CAAJ,EAAOC,QAAlC,EAA4C;AACxC;AACA,wBAAIC,WAAW,EAAf;AACAA,6BAASN,MAAT,GAAkBD,UAAUC,MAA5B;AACAM,6BAASC,SAAT,GAAqB,YAArB;AACA,wBAAIC,aAAa,mBAASC,KAAT,GAAiBC,aAAjB,CAA+BJ,QAA/B,CAAjB;;AAEA,wBAAIK,WAAW,EAAf;AACAA,6BAASF,KAAT,GAAiBD,UAAjB;AACAG,6BAASC,IAAT,GAAgB,GAAhB;AACAD,6BAASE,MAAT,GAAkB,eAAlB;AACA;AACAC,4BAAQC,GAAR,CAAYJ,QAAZ;AACAK;AACH,iBAdD,MAcO;AACH;AACA;AACAF,4BAAQC,GAAR,CAAY,+BAAZ;AACAC;AACH;AACJ,aAtBD,MAsBO;AACH;AACA;AACAF,wBAAQC,GAAR,CAAY,0BAAZ;AACAC;AACH;AACJ,SA9BD;AA+BH,KArCD;;AAuCAC,UAAM,EAAN,EAAU,gBAAQ;;AAEjB,KAFD;;AAIH,CAjDD","file":"user_login_handler.test.js","sourcesContent":["import managers from '../core/managers';\r\n\r\ndescribe.skip('User Login Test Suit', function () {\r\n\r\n    before('init', () => {\r\n\r\n    })\r\n\r\n    it('TC#1 login', done => {\r\n        var clientReq = {};\r\n        clientReq.userid = \"honggildong\";\r\n        clientReq.password = \"1234\";\r\n\r\n        // 1. 사용자 정보를 DB에서 조회\r\n        managers.db().getUserInfo(clientReq.userid, function (res) {\r\n            // 사용자 유저 존재\r\n            if (!!res) {\r\n                // 비밀번호 확인\r\n                if (clientReq.password === res[0].PASSWORD) {\r\n                    // 토큰 생성\r\n                    var userInfo = {};\r\n                    userInfo.userid = clientReq.userid;\r\n                    userInfo.timestamp = \"2018-03-08\";\r\n                    var tokenvalue = managers.token().generateToken(userInfo);\r\n\r\n                    var response = {};\r\n                    response.token = tokenvalue;\r\n                    response.code = 200;\r\n                    response.result = \"login success\";\r\n                    // res.send(response);\r\n                    console.log(response);\r\n                    done();\r\n                } else {\r\n                    // 비밀번호 실패\r\n                    // res.send(\"login fail::mismatch password\");\r\n                    console.log(\"login fail::mismatch password\");\r\n                    done();\r\n                }\r\n            } else {\r\n                // 사용자 유저 없음\r\n                // res.send(\"login fail::id not exist\");\r\n                console.log(\"login fail::id not exist\");\r\n                done();\r\n            }            \r\n        });\r\n    });\r\n\r\n    after('', done => {\r\n\r\n    })\r\n\r\n});"]}