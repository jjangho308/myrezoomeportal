{"version":3,"sources":["../../test/db.test.js"],"names":["describe","skip","csdr","before","it","current_date","Date","valueOf","toString","random","Math","testTxId","createHash","update","digest","console","log","putanchordata","done2","done","getbyTxId","getbyUserIdAndFormId","after","close","nodeurl","nexledgerService","data","name","subject","score","put","res","rtxid","getbytxid","db","dbConfig","host","port","user","password","database","getUserInfo","orgcodes","getOrgInfo","getOrgAllInfo"],"mappings":"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","file":"db.test.js","sourcesContent":["//import DatabaseManager from '../modules/db';\r\nimport AnchorDAO from '../models/anchor/anchor_dao';\r\nimport crypto from 'crypto';\r\nimport DataManager from '../modules/db/db';\r\nimport NexledgerService from '../modules/blockchain/nexledgerservice';\r\n\r\ndescribe.skip('Cassandra test suit', () => {\r\n    var csdr = null;\r\n    before('DB module initialize', () => {\r\n        /*\r\n        db = new DatabaseManager();\r\n        db.connectCsdr({\r\n            contactPoints: ['127.0.0.1'],\r\n            keyspace: 'rzm_anchor'\r\n        })\r\n        */\r\n\r\n       csdr = new AnchorDAO('127.0.0.1','rzm_anchor');\r\n    })\r\n\r\n    it('Put transaction', done => {\r\n\r\n        var current_date = (new Date()).valueOf().toString();\r\n        var random = Math.random().toString();\r\n        var testTxId = crypto.createHash('sha256').update(current_date + random).digest('hex');\r\n\r\n        console.log(\"put data : %s, %s, %s, %s, %s, %s\",\"LKW\", testTxId, \"0\", \"2\", \"OPIC\", \"OPIC\")\r\n        csdr.putanchordata(\"LKW\", testTxId, \"0\", \"2\", \"OPIC\", \"OPIC\", done2 =>{\r\n            console.log(\"====================put test====================\");\r\n            //console.log(done2);\r\n            \r\n            if(done2!=null) {\r\n                console.log(\"insert success\");\r\n            }\r\n\r\n            console.log(\"================================================\");\r\n            \r\n            if(done2!=null) {\r\n                done();\r\n            }\r\n\r\n        });\r\n\r\n        /*\r\n        csdr.putanchordata(\"LKW\",\"1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b\",\"0\",\"1\",\"OPIC\", done2 => {\r\n            console.log(done2);\r\n        });\r\n        */\r\n\r\n    })\r\n\r\n    it('GetbyTxId transaction', done => {\r\n        csdr.getbyTxId('421fc7b7c9fcd4e4436228af0652732d7145edf4', done2 => {\r\n            console.log(\"====================get TxId test====================\");\r\n            console.log(done2);\r\n            console.log(\"=====================================================\");\r\n            if(done2!=null) {\r\n                done();\r\n            }\r\n        });\r\n\r\n    })\r\n\r\n    it('GetbyUsrFormId', done => {\r\n        csdr.getbyUserIdAndFormId(\"LKW\",\"2\", done2 => {\r\n            console.log(\"===============get GetbyUsrFormId test===============\");\r\n            console.log(done2);\r\n            console.log(\"=====================================================\");\r\n            if(done2!=null) {\r\n                done();\r\n            }\r\n        });\r\n\r\n    })\r\n\r\n    after('Disconnect cassandra connection', () => {\r\n        csdr.close();\r\n    })\r\n})\r\n\r\ndescribe.skip('Blockchain test suit', () => {\r\n    var nodeurl = null;\r\n    var nexledgerService = null;\r\n\r\n    before('Blockchain module initialize', () => {\r\n        nexledgerService = new NexledgerService();\r\n        nodeurl = \"http://DEVNexledgerEXTELB-809568528.ap-northeast-2.elb.amazonaws.com:18080\";\r\n    });\r\n\r\n    it('Put Nexledger', done=>{\r\n\r\n        var data = {\r\n            name: \"lkwook\",\r\n            subject: \"meth\",\r\n            score: \"80\"\r\n        };\r\n\r\n        nexledgerService.put(nodeurl,\"155WAnc5m7RFjjLgQJjQN82nr7xjYXN2wg\",data, function(res){\r\n            console.log(\"==========test put procedure==========\");\r\n            console.log(res);\r\n            console.log(\"======================================\");\r\n        });\r\n    });\r\n\r\n    it('Get Nexledger', done=>{\r\n\r\n        var rtxid = \"4aa86a59d0326428af1c91818e639235969a3c55946921cb29406c4da04b8066\";\r\n\r\n        nexledgerService.getbytxid(nodeurl, rtxid, function(res){\r\n            console.log(\"==========test get procedure==========\");\r\n            console.log(res);\r\n            console.log(\"======================================\");\r\n        });\r\n    });\r\n})\r\n\r\ndescribe.skip('MySQL test suit', () => {\r\n    var db = null;\r\n    before('DB module initialize', () => {\r\n        var dbConfig = {\r\n            host : \"127.0.0.1\",\r\n            port : 3306,\r\n            user : \"rezoome\",\r\n            password : \"sgen2018!\",\r\n            database: \"rezoome\"\r\n        }\r\n        \r\n        db = new DataManager(dbConfig);\r\n\r\n    });\r\n\r\n    it('Get user', done=>{\r\n        db.getUserInfo('rezoome', function(res){\r\n            console.log(res);\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('Get org', done=>{\r\n        var orgcodes = [\"01\", \"02\"];\r\n        db.getOrgInfo(orgcodes, function(res){\r\n            console.log(res);\r\n            done();\r\n        })\r\n    });\r\n\r\n    it('Get org all', done=>{\r\n        var orgcodes = [\"01\", \"02\"];\r\n        db.getOrgAllInfo(function(res){\r\n            console.log(res);\r\n            done();\r\n        })\r\n    })\r\n\r\n\r\n})"]}