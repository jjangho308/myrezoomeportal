'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _abstract_model = require('../abstract_model');var _abstract_model2 = _interopRequireDefault(_abstract_model);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}
/**
ser model. <br />

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    * @since 180313
author TACKSU
var
User = function (_AbstractModel) {_inherits(User, _AbstractModel);
    function User(row) {_classCallCheck(this, User);

        // TODO 이 부분 실제 db schema에 맞게 수정할 것
        // this.user_fname = row.FNAME;
        // this.user_lname = row.LNAME;
        var _this = _possibleConstructorReturn(this, (User.__proto__ || Object.getPrototypeOf(User)).call(this, row));
        _this.username = row.NAME;

        _this.birth = row.BIRTH;
        _this.gender = row.GENDER;
        _this.phone = row.PHONE;
        _this.ci = row.CI;
        _this.email = row.EMAIL;return _this;
    }return User;}(_abstract_model2.default);exports.default =

User;
//# sourceMappingURL=user.js.map