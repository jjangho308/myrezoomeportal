{"version":3,"sources":["../../../../src/modules/db/db.js"],"names":["DataManager","opt","propertyManager","property","connectionPool","createPool","host","get","MySQL_HOST","port","MySQL_PORT","user","MySQL_ID","password","MySQL_PW","database","MySQL_DATABASE","getConnection","err","connection","release","userid","cb","userDao","res","orgcodes","orgDao1","getall","OrgDao"],"mappings":"gnBAAA,8B;AACA,sD;AACA,mD;AACA,+C;AACA,gD;AACA,uD;;;AAGA;;;;;AAKMA,W;;AAEF,yBAAYC,GAAZ,EAAiB;AACPA,WADO;AAEhB;;AAED;;;;;;;;;;AAUO;AACH,gBAAIC,kBAAkB,mBAASC,QAAT,EAAtB;;AAEA,iBAAKC,cAAL,GAAsB,gBAAMC,UAAN,CAAiB;AACnCC,sBAAMJ,gBAAgBK,GAAhB,CAAoB,mBAASC,UAA7B,CAD6B;AAEnCC,sBAAMP,gBAAgBK,GAAhB,CAAoB,mBAASG,UAA7B,CAF6B;AAGnCC,sBAAMT,gBAAgBK,GAAhB,CAAoB,mBAASK,QAA7B,CAH6B;AAInCC,0BAAUX,gBAAgBK,GAAhB,CAAoB,mBAASO,QAA7B,CAJyB;AAKnCC,0BAAUb,gBAAgBK,GAAhB,CAAoB,mBAASS,cAA7B,CALyB,EAAjB,CAAtB;;;AAQA,iBAAKZ,cAAL,CAAoBa,aAApB,CAAkC,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACzD,oBAAID,GAAJ,EAAS;AACL,0BAAMA,GAAN;AACH,iBAFD,MAEO;AACH;;;;;;;;;;;;AAYAC,+BAAWC,OAAX;AACH;AACJ,aAlBD;AAmBH,S;;AAEWC,c,EAAQC,E,EAAI;AACpB,iBAAKlB,cAAL,CAAoBa,aAApB,CAAkC,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACzD,oBAAID,GAAJ,EAAS;AACL,0BAAMA,GAAN;AACH,iBAFD,MAEO;AACH,wBAAIK,UAAU,uBAAYJ,UAAZ,CAAd;AACAI,4BAAQhB,GAAR,CAAYc,MAAZ,EAAoB,UAAUG,GAAV,EAAe;AAC/BF,2BAAGE,GAAH;AACH,qBAFD;AAGH;AACDL,2BAAWC,OAAX;AACH,aAVD;;AAYH,S;;AAEUK,gB,EAAUH,E,EAAI;AACrB,iBAAKlB,cAAL,CAAoBa,aAApB,CAAkC,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACzD,oBAAID,GAAJ,EAAS;AACL,0BAAMA,GAAN;AACH,iBAFD,MAEO;AACH,wBAAIQ,UAAU,sBAAWP,UAAX,CAAd;AACAO,4BAAQnB,GAAR,CAAYkB,QAAZ,EAAsB,UAAUD,GAAV,EAAe;AACjCF,2BAAGE,GAAH;AACH,qBAFD;AAGH;AACDL,2BAAWC,OAAX;AACH,aAVD;AAWH,S;;AAEaE,U,EAAI;AACd,iBAAKlB,cAAL,CAAoBa,aAApB,CAAkC,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACzD,oBAAID,GAAJ,EAAS;AACL,0BAAMA,GAAN;AACH,iBAFD,MAEO;AACH,wBAAIQ,UAAU,sBAAWP,UAAX,CAAd;AACAO,4BAAQC,MAAR,CAAe,UAAUH,GAAV,EAAe;AAC1BF,2BAAGE,GAAH;AACH,qBAFD;AAGH;AACDL,2BAAWC,OAAX;AACH,aAVD;AAWH,S;;AAEW;AACR,mBAAO,uBAAY,KAAKhB,cAAjB,CAAP;AACH,S;;AAEU;AACP,mBAAO,IAAIwB,MAAJ,CAAW,KAAKxB,cAAhB,CAAP;AACH,S;;;AAGUJ,W","file":"db.js","sourcesContent":["import mysql from 'mysql';\r\nimport UserDao from '../../models/user/user_dao';\r\nimport orgDao from '../../models/org/org_dao';\r\nimport Managers from \"../../core/managers\";\r\nimport Property from \"../property/property\";\r\nimport AbstractManager from '../abstract_manager';\r\n\r\n\r\n/**\r\n * Data accessor. <br />\r\n * \r\n * @since 180228\r\n */\r\nclass DataManager extends AbstractManager{\r\n\r\n    constructor(opt) {\r\n        super(opt);\r\n    }\r\n\r\n    /*\r\n    example\r\n    var dbConfig = {\r\n        host :db_config.host,\r\n        port : db_config.port,\r\n        user : db_config.user,\r\n        password : db_config.password,\r\n        database:db_config.database\r\n    }\r\n    */\r\n    init() {\r\n        var propertyManager = Managers.property();\r\n\r\n        this.connectionPool = mysql.createPool({\r\n            host: propertyManager.get(Property.MySQL_HOST),\r\n            port: propertyManager.get(Property.MySQL_PORT),\r\n            user: propertyManager.get(Property.MySQL_ID),\r\n            password: propertyManager.get(Property.MySQL_PW),\r\n            database: propertyManager.get(Property.MySQL_DATABASE)\r\n        });\r\n\r\n        this.connectionPool.getConnection(function (err, connection) {\r\n            if (err) {\r\n                throw err;\r\n            } else {\r\n                /*\r\n                connection.query(\"select * from TBL_USER\", function(err, rows){\r\n                if(err) {\r\n                    throw err;\r\n                } else {              \r\n                    var response = {};\r\n                    response.code = '200';\r\n                    response.err = '';\r\n                    res.send(response);\r\n                }\r\n                });\r\n                */\r\n                connection.release();\r\n            }\r\n        });\r\n    }\r\n\r\n    getUserInfo(userid, cb) {\r\n        this.connectionPool.getConnection(function (err, connection) {\r\n            if (err) {\r\n                throw err;\r\n            } else {\r\n                var userDao = new UserDao(connection);\r\n                userDao.get(userid, function (res) {\r\n                    cb(res);\r\n                });\r\n            }\r\n            connection.release();\r\n        });\r\n\r\n    }\r\n\r\n    getOrgInfo(orgcodes, cb) {\r\n        this.connectionPool.getConnection(function (err, connection) {\r\n            if (err) {\r\n                throw err;\r\n            } else {\r\n                var orgDao1 = new orgDao(connection);\r\n                orgDao1.get(orgcodes, function (res) {\r\n                    cb(res);\r\n                });\r\n            }\r\n            connection.release();\r\n        });\r\n    }\r\n\r\n    getOrgAllInfo(cb) {\r\n        this.connectionPool.getConnection(function (err, connection) {\r\n            if (err) {\r\n                throw err;\r\n            } else {\r\n                var orgDao1 = new orgDao(connection);\r\n                orgDao1.getall(function (res) {\r\n                    cb(res);\r\n                });\r\n            }\r\n            connection.release();\r\n        });\r\n    }\r\n\r\n    getUserDao(){\r\n        return new UserDao(this.connectionPool);\r\n    }\r\n\r\n    getOrgDao(){\r\n        return new OrgDao(this.connectionPool);\r\n    }\r\n}\r\n\r\nexport default DataManager;"]}