{"version":3,"sources":["../../../../src/modules/property/property.js"],"names":["PropertyManager","opt","filePath","developement","properties","cb","key","defValue","ReferenceError","value","get","set","PUSH_HOST","PUSH_PORT","PUSH_SSL","PUSH_HEADER_HOST","PUSH_HEADER_LOGIN","PUSH_HEADER_PASSCODE","PUSH_","NOSQL_HOST","NOSQL_KEYSPACE_NAME","MySQL_HOST","MySQL_PORT","MySQL_ID","MySQL_PW","MySQL_TIMEOUT","MySQL_DATABASE"],"mappings":"wkCAAA,qD;;AAEA,qD;AACA,uD;;AAEA;;;;;;AAMMA,e;;AAEF,6BAAYC,GAAZ,EAAiB;AACPA,WADO;AAEhB,K;;AAEM;AACH;AACA,iBAAKC,QAAL,GAAgB,sBAAYC,YAAZ,KAA6B,oBAA7B,GAAoD,qBAApE;AACA,iBAAKC,UAAL,GAAkB,gCAAO,oBAAP,CAAlB;AACH;;AAED;;;;;;;;AAQUC,U,EAAI;;AAEb,S,CADG;;AAGJ;;;;;;AAMIC,W,EAAKC,Q,EAAU;AACf,gBAAI,CAAC,KAAKH,UAAV,EAAqB;AACjB,sBAAM,IAAII,cAAJ,CAAmB,+BAAnB,CAAN;AACH;;AAED,gBAAIC,QAAQ,KAAKL,UAAL,CAAgBM,GAAhB,CAAoBJ,GAApB,CAAZ;AACA,mBAAOG,QAAQA,KAAR,GAAgBF,QAAvB;AACH,S;;AAEGD,W,EAAKG,K,EAAM;AACX,gBAAI,CAAC,KAAKL,UAAV;AACI,kBAAM,IAAII,cAAJ,CAAmB,+BAAnB,CAAN;;AAEJ,iBAAKJ,UAAL,CAAgBO,GAAhB,CAAoBL,GAApB,EAAyBG,KAAzB;AACH,S;;;AAGL;AACA;AACA;AACAT,gBAAgBY,SAAhB,GAA4B,WAA5B;AACAZ,gBAAgBa,SAAhB,GAA4B,WAA5B;AACAb,gBAAgBc,QAAhB,GAA2B,UAA3B;AACAd,gBAAgBe,gBAAhB,GAAmC,kBAAnC;AACAf,gBAAgBgB,iBAAhB,GAAoC,mBAApC;AACAhB,gBAAgBiB,oBAAhB,GAAuC,sBAAvC;AACAjB,gBAAgBkB,KAAhB,GAAwB,sBAAxB;;;AAGA;AACA;AACA;AACAlB,gBAAgBmB,UAAhB,GAA6B,YAA7B;AACAnB,gBAAgBoB,mBAAhB,GAAsC,oBAAtC;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACApB,gBAAgBqB,UAAhB,GAA6B,YAA7B;AACArB,gBAAgBsB,UAAhB,GAA6B,YAA7B;AACAtB,gBAAgBuB,QAAhB,GAA2B,UAA3B;AACAvB,gBAAgBwB,QAAhB,GAA2B,UAA3B;AACAxB,gBAAgByB,aAAhB,GAAgC,eAAhC;AACAzB,gBAAgB0B,cAAhB,GAAiC,gBAAjC,C;;;AAGe1B,e","file":"property.js","sourcesContent":["import reader from 'properties-reader';\r\n\r\nimport Environment from '../../core/environment'\r\nimport AbstractManager from \"../abstract_manager\";\r\n\r\n/**\r\n * Read configuration properties from config.properties file. <br />\r\n * \r\n * @author TACKSU\r\n * @since 180226\r\n */\r\nclass PropertyManager extends AbstractManager {\r\n\r\n    constructor(opt) {\r\n        super(opt)\r\n    }\r\n\r\n    init() {\r\n        super.init();\r\n        this.filePath = Environment.developement() ? './debug.properties' : './config.properties';\r\n        this.properties = reader('./debug.properties');\r\n    }\r\n\r\n    /**\r\n     * Watch proper file. <br />\r\n     * \r\n     * @since 180305\r\n     * @author TACKSU\r\n     * \r\n     * @param {*} cb \r\n     */\r\n    watchFile(cb) {\r\n        // TODO Implement here.\r\n    }\r\n\r\n    /**\r\n     * Get configuration value by given key. <br />\r\n     * \r\n     * @param {string} key \r\n     * @param {*} defValue \r\n     */\r\n    get(key, defValue) {\r\n        if (!this.properties){\r\n            throw new ReferenceError(\"Failed to load property file.\");\r\n        }\r\n        \r\n        var value = this.properties.get(key);\r\n        return value ? value : defValue;\r\n    }\r\n\r\n    set(key, value){\r\n        if (!this.properties)\r\n            throw new ReferenceError(\"Failed to load property file.\");\r\n\r\n        this.properties.set(key, value);\r\n    }\r\n}\r\n\r\n/****************************************/\r\n/* Amazon MQ                            */\r\n/****************************************/\r\nPropertyManager.PUSH_HOST = 'push.host';\r\nPropertyManager.PUSH_PORT = 'push.port';\r\nPropertyManager.PUSH_SSL = 'push.ssl';\r\nPropertyManager.PUSH_HEADER_HOST = 'push.header.host';\r\nPropertyManager.PUSH_HEADER_LOGIN = 'push.header.login';\r\nPropertyManager.PUSH_HEADER_PASSCODE = 'push.header.passcode';\r\nPropertyManager.PUSH_ = 'push.header.passcode';\r\n\r\n\r\n/****************************************/\r\n/* NOSQL                                */\r\n/****************************************/\r\nPropertyManager.NOSQL_HOST = 'nosql.host';\r\nPropertyManager.NOSQL_KEYSPACE_NAME = 'nosql.keyspacename';\r\n//PropertyManager.NOSQL_PORT = 'nosql.port'\r\n//PropertyManager.NOSQL_PROTOCOL = 'nosql.protocol';\r\n//PropertyManager.NOSQL_ID = 'nosql.id';\r\n//PropertyManager.NOSQL_PW = 'nosql.pw';\r\n//PropertyManager.NOSQL_TIMEOUT = 'nosql.timeout';\r\n\r\n\r\n/****************************************/\r\n/* MySQL                                */\r\n/****************************************/\r\nPropertyManager.MySQL_HOST = 'mysql.host';\r\nPropertyManager.MySQL_PORT = 'mysql.port'\r\nPropertyManager.MySQL_ID = 'mysql.id';\r\nPropertyManager.MySQL_PW = 'mysql.pw';\r\nPropertyManager.MySQL_TIMEOUT = 'mysql.timeout';\r\nPropertyManager.MySQL_DATABASE = 'mysql.database';\r\n\r\n\r\nexport default PropertyManager;"]}